knitr::opts_chunk$set(echo = TRUE)
install.packages("dplyr")
packrat::snapshot(prompt = FALSE)
install.packages("readr")
packrat::snapshot(prompt = FALSE)
library("dplyr")
library("readr")
url <- "http://s3.amazonaws.com/assets.datacamp.com/production/course_1074/datasets/albums.csv"
getwd()
download.file(url, "albums.csv")
url <- "http://s3.amazonaws.com/assets.datacamp.com/production/course_1074/datasets/artists.csv"
download.file(url, "albums.csv")
url <- "http://s3.amazonaws.com/assets.datacamp.com/production/course_1074/datasets/bands.csv"
download.file(url, "albums.csv")
url <- "http://s3.amazonaws.com/assets.datacamp.com/production/course_1074/datasets/songs.csv"
download.file(url, "albums.csv")
url <- "http://s3.amazonaws.com/assets.datacamp.com/production/course_1074/datasets/albums.csv"
download.file(url, "albums.csv")
url <- "http://s3.amazonaws.com/assets.datacamp.com/production/course_1074/datasets/artists.csv"
download.file(url, "artists.csv")
url <- "http://s3.amazonaws.com/assets.datacamp.com/production/course_1074/datasets/bands.csv"
download.file(url, "bands.csv")
url <- "http://s3.amazonaws.com/assets.datacamp.com/production/course_1074/datasets/songs.csv"
download.file(url, "songs.csv")
albums <- read_csv("albums.csv")
View(albums)
artist <- read_csv("artist.csv")
artists <- read_csv("artists.csv")
bands <- read_csv("bands.csv")
songs <- read_csv("songs.csv")
bands2 <- left_join(bands, artists, by = c("first", "last") )
bands2
albums <- as.tibble(read_csv("albums.csv"))
install.packages("tibble")
packrat::restore(prompt = FALSE)
library("tibble")
albums <- as.tibble(read_csv("albums.csv"))
artists <- as.tibble(read_csv("artists.csv"))
bands <- as.tibble(read_csv("bands.csv"))
songs <- as.tibble(read_csv("songs.csv"))
bands2 <- left_join(bands, artists, by = c("first", "last") )
bands2
class(albums)
class(songs)
View(albums)
View(bands2)
albums <- read_csv("albums.csv")
artists <- read_csv("artists.csv")
bands <- read_csv("bands.csv")
songs <- read_csv("songs.csv")
albums <- tbl_df(albums)
albums <- tbl_df(albums)
artists <- tbl_df(artists)
bands <- tbl_df(bands)
songs <- tbl_df(songs)
bands2 <- left_join(bands, artists, by = c("first", "last") )
bands2
class(bands2)
albums <- read_csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_1074/datasets/albums.csv")
artists <- read_csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_1074/datasets/artists.csv")
bands <- read_csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_1074/datasets/bands.csv")
songs <- read_csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_1074/datasets/songs.csv")
bands2 <- left_join(bands, artists, by = c("first", "last") )
bands2
albums <- read_csv("albums.csv")
artists <- read_csv("artists.csv")
bands <- read_csv("bands.csv")
songs <- read_csv("songs.csv")
bands2 <- left_join(bands, artists, by = c("first", "last") )
bands2
bands2 <- left_join(bands, artists, by = c("first", "last") )
# Examine the results
bands2
bands2 <- left_join(bands, artists, by = c("first", "last") )
# Examine the results
bands2
library("dplyr")
library("readr")
albums <- read_csv("albums.csv")
artists <- read_csv("artists.csv")
bands <- read_csv("bands.csv")
songs <- read_csv("songs.csv")
bands2 <- left_join(bands, artists, by = c("first", "last") )
# Examine the results
bands2
left_join(bands, artists, by = c("first", "last"))
# Finish the code below to recreate bands3 with a right join
bands2 <- left_join(bands, artists, by = c("first", "last"))
bands3 <- right_join(artists, bands, by = c("first", "last"))
# Check that bands3 is equal to bands2
setequal(bands2, bands3)
inner_join(songs, albums, by ="album")
# Join bands to artists using full_join()
full_join(artists, bands, by = c("first", "last"))
temp <- left_join(bands, artists, by = c("first", "last"))
temp <- filter(temp, instrument == "Guitar")
select(temp, first, last, band)
# Reproduce code above using pipes
bands %>%
left_join(artists, by = c("first", "last")) %>%
filter(instrument == "Guitar") %>%
select(first, last, band)
#precode
goal <- artists %>%
full_join(bands, by = c("first", "last")) %>%
inner_join(songs, by = c("first", "last"))
# Examine the contents of the goal dataset
goal
# Create goal2 using full_join() and inner_join()
goal2 <- artists %>%
full_join(bands, by = c("first", "last")) %>%
inner_join(songs, by = c("first", "last"))
# Check that goal and goal2 are the same
setequal(goal, goal2)
artists %>%
full_join(bands, by = c("first", "last")) %>%
full_join(songs, by = c("first", "last")) %>%
full_join(albums, by = c("album", "band"))
